{"version":3,"sources":["components/Header.js","helpers.js","components/Form.js","components/Summary.js","components/Result.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","HeaderText","h1","Header","title","firstCapital","text","charAt","toUpperCase","slice","Field","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Form","setSummary","setLoading","useState","brand","year","plan","data","setData","error","setError","getData","e","target","name","value","onSubmit","preventDefault","trim","result","difference","Date","getFullYear","getYearDifference","increment","calculateBrand","parseFloat","calculatePlan","toFixed","quote","setTimeout","onChange","type","checked","SummaryContainer","Summary","console","log","Message","p","QuoteResult","QuoteText","Result","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Container","FormContainer","App","summary","loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.76ae8e1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst HeaderContainer = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst HeaderText = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({title}) => {\r\n    return ( \r\n        <HeaderContainer>\r\n            <HeaderText>{title}</HeaderText>\r\n        </HeaderContainer>\r\n     );\r\n}\r\n \r\nexport default Header;","export function getYearDifference(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calculateBrand(brand){\r\n    let increment;\r\n    switch(brand){\r\n        case 'european':\r\n            increment = 1.3;\r\n            break;\r\n        case 'american':\r\n            increment = 1.15;\r\n            break;\r\n        case 'asian':\r\n            increment = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return increment;  \r\n}\r\n\r\nexport function calculatePlan(plan){\r\n    if(plan==='basic'){\r\n        return 1.2;\r\n    }else{\r\n        return 1.5;\r\n    }\r\n}\r\n\r\nexport function firstCapital(text){\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}","import React, {useState} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { getYearDifference, calculateBrand, calculatePlan } from '../helpers'\r\n\r\nconst Field = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    background-color: #00838f;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        background-color: #26C6DA;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    margin-bottom: 2rem;\r\n    width: 100%100px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Form = ({setSummary, setLoading}) => {\r\n\r\n    const [data, setData] = useState({\r\n        brand: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const {brand, year, plan} = data;\r\n\r\n    const getData = e => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const submitInsurance = e => {\r\n        e.preventDefault();\r\n        if(brand.trim() === '' || year.trim() === '' || plan.trim() === ''){\r\n            setError(true)\r\n            return;\r\n        }\r\n\r\n        setError(false)\r\n\r\n        // initial price 2000\r\n\r\n        let result = 2000;\r\n\r\n        const difference = getYearDifference(year);\r\n\r\n        //discounts 3% per year of antiquity\r\n        result -= (( difference * 3 ) * result) / 100;\r\n\r\n        // american 15%, asian 5%, european 30%\r\n        result = calculateBrand(brand) * result;\r\n        \r\n        result = parseFloat( calculatePlan(plan) * result ).toFixed(2);\r\n\r\n        setLoading(true);\r\n\r\n        //Empties the current quote, preventing the summary to show up older information\r\n        setSummary({\r\n            quote: '',\r\n            data: {\r\n                brand: '',\r\n                year: '',\r\n                plan: ''\r\n            }\r\n        })\r\n\r\n        setTimeout( () => {\r\n            setLoading(false);\r\n            setSummary({\r\n                quote: result,\r\n                data\r\n            })\r\n        }, 2000)\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={submitInsurance}\r\n        >\r\n\r\n            { error ? <Error>Every field must be completed.</Error> : null}\r\n\r\n            <Field>\r\n                <Label>Brand</Label>\r\n                <Select\r\n                    name='brand'\r\n                    value={brand}\r\n                    onChange={getData}\r\n                >\r\n                    <option value=''>Select a brand</option>\r\n                    <option value='american' >American</option>\r\n                    <option value='european'>European</option>\r\n                    <option value='asian'>Asiatic</option>\r\n                </Select>\r\n            </Field>\r\n\r\n            <Field>\r\n                <Label>Year</Label>\r\n                <Select\r\n                    name='year'\r\n                    value={year}\r\n                    onChange={getData}\r\n                >\r\n                    <option value=\"\">Select the year</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Field>\r\n\r\n            <Field>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type='radio'\r\n                    name='plan'\r\n                    value='basic'\r\n                    checked={plan === 'basic'}\r\n                    onChange={getData}\r\n                />Basic\r\n                <InputRadio\r\n                    type='radio'\r\n                    name='plan'\r\n                    value='full'\r\n                    checked={plan ==='full'}\r\n                    onChange={getData}\r\n                />Full\r\n            </Field>\r\n\r\n            <Button type='submit'>Quote</Button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {firstCapital} from '../helpers'\r\n\r\nconst SummaryContainer = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838f;\r\n    color: #fff;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Summary = ({data}) => {\r\n    const {brand, year, plan} = data\r\n\r\n    if (brand === '' || year === '' || plan === ''){\r\n        console.log(\"returning null\")\r\n        return null;\r\n    }\r\n\r\n    return ( \r\n        <SummaryContainer>\r\n            <h2>Quote Summary</h2>\r\n            <ul>\r\n                <li>Brand: { firstCapital(brand)}</li>\r\n                <li>Year: {firstCapital(year)}</li>\r\n                <li>Plan: {firstCapital(plan)}</li>\r\n            </ul>\r\n        </SummaryContainer>\r\n     );\r\n}\r\n \r\nexport default Summary;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst Message = styled.p`\r\n    background-color: rgb(127,224,237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst QuoteResult = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127,224,237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst QuoteText = styled.p`\r\n    color: #00838f;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst Result = ({quote}) => {\r\n\r\n    return ( \r\n        (quote === 0) ? <Message>Choose brand, year and type of insurance.</Message>\r\n        : \r\n            (\r\n            <QuoteResult>\r\n                <TransitionGroup\r\n                    component=\"p\"\r\n                    className=\"resultado\"\r\n                >\r\n                    <CSSTransition\r\n                        classNames=\"resultado\"\r\n                        key={quote}\r\n                        timeout={{ enter: 500, exit: 500}}\r\n                    >\r\n                        <QuoteText>The total amount is: ${quote}</QuoteText>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </QuoteResult>\r\n            )\r\n    );\r\n}\r\n \r\nexport default Result;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n\r\n        <div className=\"sk-fading-circle\">\r\n            <div className=\"sk-circle1 sk-circle\"></div>\r\n            <div className=\"sk-circle2 sk-circle\"></div>\r\n            <div className=\"sk-circle3 sk-circle\"></div>\r\n            <div className=\"sk-circle4 sk-circle\"></div>\r\n            <div className=\"sk-circle5 sk-circle\"></div>\r\n            <div className=\"sk-circle6 sk-circle\"></div>\r\n            <div className=\"sk-circle7 sk-circle\"></div>\r\n            <div className=\"sk-circle8 sk-circle\"></div>\r\n            <div className=\"sk-circle9 sk-circle\"></div>\r\n            <div className=\"sk-circle10 sk-circle\"></div>\r\n            <div className=\"sk-circle11 sk-circle\"></div>\r\n            <div className=\"sk-circle12 sk-circle\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, {useState} from 'react';\nimport Header from './components/Header';\nimport styled from '@emotion/styled';\nimport Form from './components/Form'\nimport Summary from './components/Summary'\nimport Result from './components/Result'\nimport Spinner from './components/Spinner'\n\nconst Container = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst FormContainer = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  const [summary, setSummary] = useState({\n    quote: 0,\n    data: {\n      brand: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const {quote, data} = summary;\n\n  return (\n    <Container>\n      <Header \n        title='Car Insurance Quote'\n      />\n      <FormContainer>\n        <Form \n          setSummary={setSummary}\n          setLoading={setLoading}\n        />\n\n        { loading ? <Spinner /> : null}\n\n        <Summary \n          data={data}\n        />\n        \n        { !loading ?\n          <Result\n            quote={quote}\n          />\n        : null\n        }\n        \n      </FormContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}